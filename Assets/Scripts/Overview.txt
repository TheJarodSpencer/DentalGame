Overview of the folders and scripts!

=====Admin=====
-AdminAuth:
Used for Admin authentication of users by pulling the entered in users information from firebase to compare password is correct.
-AdminPanel:
Handles the admin panel of adding/removing users.
-AdminReset: 
Used for resetting the password of the user inputted into the textbox in the Admin Panel Scene.
-AllowPaste: 
Use to be connected to the INDEX.html that is produced when you build the game. The index we have implements JavaScript which we used for admins to copy and paste users from a .txt to the game. By pressing "V" after putting information in this textbox it will pull it and paste it in the game on itch. This script handles those JavaScript calls in the index.



=====Character=====
-AnimationHandler:
Attached to the player, needs to attach GV to GlobalVariables and RAL to ReAnimationLoader both on main camera
Pulls materials from ReAnimationLoader and switches those materials when walking left or right an blinking.
Materials are there for talking animation as well but the feature was never fully implemented
-CharacterMovement:
Attached to player, set GV to GlobalVariables on main camera. Defualt speed variable is 5.
Moves player left right up down based on wasd controls only if the game is not paused or player is not talking to patient. 
-ReAnimationLoader:
Attached to main camera, must set GCM to GlobalCharacterMaterials and GV to GlobalVariables both also on the main camera.
Grabs the character ID and seds it to get statements in GlobalCharacterMaterials for the matching player attributes then formats those materials in arrays that match switching patterns in animationHandler.


=====Character Creator=====
-Confirmation:
Attached to main camera in CharacterCreator scene. Public Button objects should be set to buttons with matching names as well as Menu and Conf Menu. 
A final checker for the player and the final grab for the players character id that then sends it off to the firebase server when the player clicks confirm. 
-ButtonManager:
    -The public variables
        Attached to the Menu canvas in the character creator scene. 
        None hair mat is set to a blank material. Short hair and ponytail are set to the order of these colors:
        Black, blonde, burnette, orange, red.
        Female and male skin and blink skins should be set in the order of which they are numbered. 
        All other buttons should be set in accordance to their name in the inspector and their listing parent-child relationship in the hierarchy. 
        (Blank) Empty objects are set to the empty object as a parent to a group of buttons, used in the script to make a group appear and dissappear when the user is on a certain menu. 
    -The function
        Changes the character models materials based on the buttons they click and changes the canvas layout accordingly.
        Dynamically updates the character id. 
        There is also a looping animation for blinking. 



=====Elevator=====
-ElevatorButtonManager:
Attached to the Elevator scene that handles what button the user presses on to go to a certain floor.
-ElevatorOpen:
Handles the Player walking up and interacting with the Elevator on the LevelSelector.



=====FireBase=====
-FireBase:
Handles the Firebase connection of grabbing and sending player data and is used by other scripts to send the information.



=====GlobalVaraibles=====
-GlobalCharacterMaterials:
Attached to main camera, holds all the different materials that could possibly go onto the player model.
All materials need to be added accordingly for every scene the player model will be controlled. 
skin male/female 1-4 are set as follows (using male 1 as example):
    m1
    m1blink
    m1t
    m1r
    m1rblink
    m1rt
The first three are left facing assets, m1 is the default look, m1blink is blinking, m1t it left face talking.
The last three are the same thing but with (r) meaning facing right. 
This has to be done with all skin types for male and female.
Next is the scrubs. The scrubs are set to default white and are changed to the matching color of the character id from the script using hex values.
They need to be set as follows:
    ScrubWLF0
    ScrubWLF1
    ScrubWLF2
    ScrubWRF0
    ScrubWRF1
    ScrubWRF2
The format is Scrub, W for white, L for left or R for right facing, F0-2 for frame 0-2. Used for the walking animation. 
Glasses and labcoat should be set to elemnt0 being the "glasses" or "labcoat" material with element 1 being the same thing but with "R" at the end of its name. 
Hair short and hair ponytail is the same format as glasses and labcoat but should be set to blonde since it changes the color of the material in the script same as scrubs.
Blank mat should be set to the transparent material blankmat. 
The script is a list of setters and getters for the ReAnimationLoader to grab the appropriate materials
-GlobalVariables:
Always attached to the main camera
The entire list is setters and getters for materials, integers, signals, and other variables, essentially a hub for communication between all the other scripts. 



=====Level=====
-Home:
-LevelButtonManager:
Used for managing the UI of the Levels and grading to send to Firebase.
-UIHandler:

=LevelComplete=
-PlayButton:
Used for button clicks in the Levels. When the player clicks "Next" when presented the UI final score this grabs the Player POS before they entered the level for the user to be right back where they left off in level selector.

=Noxium=
-AxiumButtonManager:
Used for button clicks in Noxium. When notes, forms, or meds are clicked, the corresponding screen activates.
-AxiumDisplay:
Used to load image in for levels that have one. Also used for inputting history and notes into the Noxium system. 
-HoveringText:
Allows text of buttons to appear when user hovers over them.


=====LevelSelector=====
-BoxFade:
Used to create the popup text when walking past a bay.
-EnterDoors:
For entering the BAYS of the clinicals (originally it was doors of an office changed to bays of a clinic)
-KeepPlayerPOS:
Keeps the players position stored across scenes. It loads the player where they were in the level selector after completing a level.
-LevelSelectorCameraFollow:
Controls the camera movement of the LevelSelector to prevent the camera from moving out of scope of the designed level.
-LoadCharacterPOS: 
On start finds the location of the player using the player tag.
-NPCinBays:
Used in LevelSelector floors to track level progression for users to see when they have completed a level. Students are graded the first time they play the level but are able to play over and over. On start the users can see the NPCs next to their bays, when false and NPC not displayed the player completed that level.




=====LoginPage=====
-ChangePassword:
Used to handle changing the players passwords in the ChangePassword scene.
-KeepPlayerName:
Called in login and once the user logins it grabs the username of the player and keeps it alive across the game. 
-PlayerSaveData:
Called in login and grabs the player data from firebase to get character customization and experience right when loading into the game.
-SetPlayerInfo:
Called in UserAuth however I do not think it need to be used now that the admin panel is fully implemented. Can be useful to obtain ideas for connecting to firebase.
-UserAuth:
Almost identical to admin auth but is only for the users auth. And by passing the admins to get to their admin login panel.



=====NPC=====
-ButtonMouseOver:
A script used during dialogue with the patient, only allows the user to select a button when their mouse is hovered over it.
Used incase the user is spamming enter which can press the last button selected.
-ChatboxHandler:
Used for setting the highligh around the NPC when the players mouse is hovering over them then activates the dialogue canvas when clicked. Also hold that players script and sends it to global variables to be pulled by Talking Handler. 
-TalkingAnimationHandler:
Was supposed to be used to allow the NPC's mouth to open and close while text is enumerating. Implementation was never finished.
-TalkingHandler:
This translates the scripts from the .txt file or TextAsset variable and enumerates it line by line as well as gather the players answers from button presses and responds accordingly. 
-TalkingSoundHandler:
A simple script for playing a sound while the NPC is talking. 


=====Settings=====
-AudioHandler:
Gets and stores volumes when the user changes it with the auido slider.
-AudioSlider
Changes the volume of the in-game audio.
-LeaderBoardManager:
Used in the Leadboard scene that displays the most levels completed ranked and best score ranked (1-10).
-MusicHandler:
Gets audio source and plays while in scenes.
-PauseButton:
When pause button is clicked, takes user to SettingsScene.
-SettingAudio:
Gets audio in the scene and stores the adjusted volume.
-SettingMenu:
Tracks all buttons within the SettingsScene and connects them to their corresponding scene.


//FOLLOW THE SAME NAME FORMAT FOR THE FILES
=====TextAnwsersDIA_MED=====
Stores the content in a .txt for the Diagnosis and Medicine buttons within the level. Drag and drop the specific level .txt to DiaFile and MedFile within LevelButtonManager.


=====TextDialogueScriptsForLevels=====
Stores the content in a .txt for the dialogue between the NPC and the player. Create the script following the format with the script for asking questions and providing answers and feedback. Drag and drop the file into the "Talking Script" located in the hover detecting (Script:ChatboxHandler) located in the NPC game object within the Level.


=====TextForNotes_MedHistory=====
Stores the content in a .txt for the display information for Noxium. It contains the Medical History tab and the Notes tab. Create one for each level based on the given content and drag and drop in LevelButtonManager in the AxiumDisplay script into the NoteText and MedHistoryText fields.


=====Transitions=====
-FadeIn:
Used in the matching Prefab to fade away a black screen for scene transitions out of bays.
-FadeOut:
Used in the matching Prefab to fade to a black screen for scene transitions into bays.

=====WelcomeScene=====
-Menu: 
Keeps track of when all buttons are pushed they send the player to the corresponding scene. Saves cahracter data in firebase.
-HoveringTextWelcome:
Changes color of the text of the buttons from black to green if the user can interact.


